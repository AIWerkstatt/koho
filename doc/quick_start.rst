.. include:: <isonum.txt>

###########
Quick Start
###########

Programming Language:
`Python`_ 3.7,
`Cython`_ (Python bindings for C++),
`C++`_ 17

Python Packages:
`numpy`_, `scipy`_, `scikit-learn`_

.. _`Python`: https://www.python.org
.. _`Cython`: https://cython.org/
.. _`C`: https://gcc.gnu.org/
.. _`C++`: https://gcc.gnu.org/
.. _`numpy`: http://www.numpy.org
.. _`scipy`: https://www.scipy.org
.. _`scikit-learn`: http://scikit-learn.org

You just want to use it (Python)
================================

pip installation
----------------

The ``koho`` `package`_ is available through `PyPi`_ and
can be installed using `pip`_:

.. code-block:: text

    $: pip install koho

.. _`package`: https://pypi.org/project/koho/
.. _`pip`: https://pypi.org/project/pip/
.. _`PyPi`: https://pypi.org/
.. _`conda`: http://conda.pydata.org/
.. _`conda-forge`: https://conda-forge.org/

Read the Docs
-------------

The `koho documentation`_ is hosted on `Read the Docs`_:

.. code-block:: text

    Firefox: http://koho.readthedocs.io

.. _`koho documentation`: http://koho.readthedocs.io/
.. _`Read the Docs`: https://readthedocs.org/

Jupyter notebook
----------------

The ``koho`` package can be used with `jupyter notebook`_:

.. code-block:: text

    $: conda install jupyter
    $: conda install tornado=5.1.1  # downgrade if connection problems with jupyter
    $: jupyter notebook
    [] from koho.sklearn import DecisionTreeClassifier, DecisionForestClassifier
    [] ...

.. _`jupyter notebook`: http://jupyter.org/

Download
========

Download repository
-------------------

Clone the `koho repository`_ from `GitHub`_:

.. code-block:: text

    $: sudo apt install git
    $: git clone https://github.com/aiwerkstatt/koho.git

.. _`koho repository`: https://github.com/AIWerkstatt/koho
.. _`GitHub`: https://github.com/

Python
------

**Build & Install**

Option 1: Build and install the ``koho`` package including `Cython`_:

.. code-block:: text

    $: pip install cython
    koho$: python setup.py build_ext --inplace --use-cython
    koho$: pip install -e .

Option 2: Build and install the ``koho`` package using the `C++`_ file previously generated by `Cython`_ (no Cython needed):

.. code-block:: text

    koho$: python setup.py build_ext --inplace
    koho$: pip install -e .

**Generate the documentation**

Generate the ``koho`` documentation,
including the Python API documentation, using `sphinx`_ and `napoleon`_ (NumPy Style Python Docstrings)
and the C++ API documentation using `doxygen`_:

.. code-block:: text

    $: conda install -c conda-forge sphinx sphinx-gallery sphinx_rtd_theme matplotlib pillow
    koho/doc$: make html

View the ``koho`` documentation:

.. code-block:: text

    Firebox: file:///home/<user>/<...>/koho/doc/_build/html/index.html

.. _`doxygen`: http://www.doxygen.nl/
.. _`sphinx`: http://www.sphinx-doc.org/
.. _`napoleon`: https://sphinxcontrib-napoleon.readthedocs.io

**Run tests**

Test the ``koho`` package using `pytest`_ with `pytest-cov`_ plugin:

.. code-block:: text

    $: conda install pytest pytest-cov
    koho$: pytest --disable-pytest-warnings -v --cov=koho --pyargs koho/sklearn

.. _`pytest`: http://doc.pytest.org
.. _`pytest-cov`: https://pypi.python.org/pypi/pytest-cov

C++
---

**Build & Install**

Build the ``koho`` C++ library:

.. code-block:: text

    $: sudo apt install cmake
    koho/koho/cpp/$: mkdir ./cmake-build-release
    koho/koho/cpp/cmake-build-release$: cmake .. -DCMAKE_BUILD_TYPE=Release
    koho/koho/cpp/cmake-build-release$: make

**Generate the documentation**

Generate the ``koho`` C++ API documentation using `doxygen`_:

.. code-block:: text

    $: sudo apt install doxygen
    koho/cpp$: doxygen

View the ``koho`` C++ API documentation:

.. code-block:: text

    Firebox: file:///home/<user>/<...>/koho/cpp/html/index.html

**Run tests**

Test the ``koho`` C++ library using `catch`_:

.. code-block:: text

    koho/koho/cpp/cmake-build-release$: ./test_decision_tree_classifier
    koho/koho/cpp/cmake-build-release$: ./test_decision_forest_classifier

.. _`catch`: https://github.com/catchorg/Catch2

